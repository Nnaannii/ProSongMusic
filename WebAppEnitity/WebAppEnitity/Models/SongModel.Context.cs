//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebAppEnitity.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SongsDbEntities1 : DbContext
    {
        public SongsDbEntities1()
            : base("name=SongsDbEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Gene> Gene { get; set; }
        public virtual DbSet<Song> Song { get; set; }
    
        public virtual int sp_song_save(string trasntype, Nullable<int> song_id, string song_title, string song_group, string song_year, string song_gene)
        {
            var trasntypeParameter = trasntype != null ?
                new ObjectParameter("trasntype", trasntype) :
                new ObjectParameter("trasntype", typeof(string));
    
            var song_idParameter = song_id.HasValue ?
                new ObjectParameter("song_id", song_id) :
                new ObjectParameter("song_id", typeof(int));
    
            var song_titleParameter = song_title != null ?
                new ObjectParameter("song_title", song_title) :
                new ObjectParameter("song_title", typeof(string));
    
            var song_groupParameter = song_group != null ?
                new ObjectParameter("song_group", song_group) :
                new ObjectParameter("song_group", typeof(string));
    
            var song_yearParameter = song_year != null ?
                new ObjectParameter("song_year", song_year) :
                new ObjectParameter("song_year", typeof(string));
    
            var song_geneParameter = song_gene != null ?
                new ObjectParameter("song_gene", song_gene) :
                new ObjectParameter("song_gene", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_song_save", trasntypeParameter, song_idParameter, song_titleParameter, song_groupParameter, song_yearParameter, song_geneParameter);
        }
    
        public virtual ObjectResult<sp_song_select_Result> sp_song_select(string trasntype, Nullable<int> song_id, string song_title, string song_group, string song_year, string song_gene)
        {
            var trasntypeParameter = trasntype != null ?
                new ObjectParameter("trasntype", trasntype) :
                new ObjectParameter("trasntype", typeof(string));
    
            var song_idParameter = song_id.HasValue ?
                new ObjectParameter("song_id", song_id) :
                new ObjectParameter("song_id", typeof(int));
    
            var song_titleParameter = song_title != null ?
                new ObjectParameter("song_title", song_title) :
                new ObjectParameter("song_title", typeof(string));
    
            var song_groupParameter = song_group != null ?
                new ObjectParameter("song_group", song_group) :
                new ObjectParameter("song_group", typeof(string));
    
            var song_yearParameter = song_year != null ?
                new ObjectParameter("song_year", song_year) :
                new ObjectParameter("song_year", typeof(string));
    
            var song_geneParameter = song_gene != null ?
                new ObjectParameter("song_gene", song_gene) :
                new ObjectParameter("song_gene", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_song_select_Result>("sp_song_select", trasntypeParameter, song_idParameter, song_titleParameter, song_groupParameter, song_yearParameter, song_geneParameter);
        }
    }
}
